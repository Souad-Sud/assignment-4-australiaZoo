App   
    -Layout wrapped in Routes

Create Layout component
        -<Header />
        -<Outlet />
        -<Footer />

Create Header component  
        -<HeaderItem> that will contain: 
                -- useState() -> active class for DesktopNavigation-Items 
                -- handleClickMenu -> for the icon in responsive web
                            -- icon-btn ->takes handleClickMenu
                            -- Logo img
                            -- and <DesktopNavigation /> component ->takes props to display menu

Create Navigation Component that contains <DesktopNavigation /> component

DesktopNavigation component :
       --takes props ({displayMenu})
       --<AnimalMenuItem/> component

AnimalMenuItem component : 
      --take props ({pageItem}) and navLink to display animals            


Create page component:
     --> About takes ({title}) as props
     --> AnimalPage
     --> Home

AnimalPage component:
     -->useState() for seletced animal
     -->useEffect()  => with first argument (setSelectedAnimal) resetting it to null
                     =>dependency array [title] = if title stays the same between renders React skip or stopp running this effect
     -->Filter animals based on the title
     -->create an object of array of image and assign image to the title
     -->If selectedGroupAnimal === to animal display animal description to <AnimalPageDescription />
   

AnimalPageDescription component: 
      -->takes a props ({animal})
      -->useState() : to display the details about each animal on onlick =>toggleList()
    

Home component :
          -->useState()-- for selectedAnimal
   --> <MainContent />
           ->takes props ({animal, title})
           ->useNavigate() to change route like Link
   --> <HomeSideBar />
           ->setSelectedAnimal props

MainContent component : 
         ->takes props ({animal, title})
         -> if statement --> if animal is not clicked a message will display otherwise when an animal is clicked will replace that content with the animal description 

HomeSideBar component :
        ->take props ({setSelectedAnimal})
        -> useState() 
                   -->isStretched for the sideBar 
                   -->isBigger fro the pictures in the sideBar
                   -->active class 

        -> toggleBtnClick--assigned to the icon <List />
        -> handleAnimalActive -- assigned to the <SideBarItem />
            
        -> <SideBarItem />
              ->take props 
                   --> animal
                   --> onClick
                   --> isBigger
                   --> isActive

SideBarItem component:
        -> list of animals 

Footer component